"use client";

import { useState } from "react";
import { cn } from "@/lib/utils";
import { Button } from "./ui/button";

interface SidebarProps {
  defaultExpanded?: boolean;
}

const DashboardIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      opacity="0.4"
      d="M15.3125 12.7604V9.84375C15.3125 7.44663 15.3125 6.24807 14.6504 5.44135C14.5292 5.29368 14.3938 5.15826 14.2462 5.03705C13.4394 4.375 12.2409 4.375 9.84375 4.375C7.44663 4.375 6.24807 4.375 5.44135 5.03705C5.29368 5.15826 5.15826 5.29368 5.03705 5.44135C4.375 6.24807 4.375 7.44663 4.375 9.84375V12.7604C4.375 15.1575 4.375 16.3561 5.03705 17.1628C5.15826 17.3106 5.29368 17.4459 5.44135 17.5671C6.24807 18.2292 7.44663 18.2292 9.84375 18.2292C12.2409 18.2292 13.4394 18.2292 14.2462 17.5671C14.3938 17.4459 14.5292 17.3106 14.6504 17.1628C15.3125 16.3561 15.3125 15.1575 15.3125 12.7604Z"
      fill="#0E475B"
    />
    <path
      opacity="0.4"
      d="M30.625 25.1562V22.2395C30.625 19.8424 30.625 18.6438 29.9629 17.8371C29.8417 17.6894 29.7064 17.554 29.5587 17.4328C28.7519 16.7708 27.5533 16.7708 25.1562 16.7708C22.7592 16.7708 21.5606 16.7708 20.7538 17.4328C20.6061 17.554 20.4708 17.6894 20.3496 17.8371C19.6875 18.6438 19.6875 19.8424 19.6875 22.2395V25.1562C19.6875 27.5532 19.6875 28.7518 20.3496 29.5586C20.4708 29.7063 20.6061 29.8416 20.7538 29.9628C21.5606 30.6249 22.7592 30.6249 25.1562 30.6249C27.5533 30.6249 28.7519 30.6249 29.5587 29.9628C29.7064 29.8416 29.8417 29.7063 29.9629 29.5586C30.625 28.7518 30.625 27.5532 30.625 25.1562Z"
      fill="#0E475B"
    />
    <path
      d="M15.3125 12.7604V9.84375C15.3125 7.44663 15.3125 6.24807 14.6504 5.44135C14.5292 5.29368 14.3938 5.15826 14.2462 5.03705C13.4394 4.375 12.2409 4.375 9.84375 4.375C7.44663 4.375 6.24807 4.375 5.44135 5.03705C5.29368 5.15826 5.15826 5.29368 5.03705 5.44135C4.375 6.24807 4.375 7.44663 4.375 9.84375V12.7604C4.375 15.1575 4.375 16.3561 5.03705 17.1628C5.15826 17.3106 5.29368 17.4459 5.44135 17.5671C6.24807 18.2292 7.44663 18.2292 9.84375 18.2292C12.2409 18.2292 13.4394 18.2292 14.2462 17.5671C14.3938 17.4459 14.5292 17.3106 14.6504 17.1628C15.3125 16.3561 15.3125 15.1575 15.3125 12.7604Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinejoin="round"
    />
    <path
      d="M11.3021 22.6042H8.38542C7.36782 22.6042 6.85902 22.6042 6.445 22.7298C5.51284 23.0126 4.78336 23.742 4.50059 24.6742C4.375 25.0882 4.375 25.597 4.375 26.6147C4.375 27.6323 4.375 28.1411 4.50059 28.5551C4.78336 29.4873 5.51284 30.2167 6.445 30.4995C6.85902 30.6251 7.36782 30.6251 8.38542 30.6251H11.3021C12.3197 30.6251 12.8285 30.6251 13.2425 30.4995C14.1747 30.2167 14.9042 29.4873 15.1869 28.5551C15.3125 28.1411 15.3125 27.6323 15.3125 26.6147C15.3125 25.597 15.3125 25.0882 15.1869 24.6742C14.9042 23.742 14.1747 23.0126 13.2425 22.7298C12.8285 22.6042 12.3197 22.6042 11.3021 22.6042Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinejoin="round"
    />
    <path
      d="M30.625 25.1562V22.2395C30.625 19.8424 30.625 18.6438 29.9629 17.8371C29.8417 17.6894 29.7064 17.554 29.5587 17.4328C28.7519 16.7708 27.5533 16.7708 25.1563 16.7708C22.7592 16.7708 21.5606 16.7708 20.7538 17.4328C20.6061 17.554 20.4708 17.6894 20.3496 17.8371C19.6875 18.6438 19.6875 19.8424 19.6875 22.2395V25.1562C19.6875 27.5532 19.6875 28.7518 20.3496 29.5586C20.4708 29.7063 20.6061 29.8416 20.7538 29.9628C21.5606 30.6249 22.7592 30.6249 25.1563 30.6249C27.5533 30.6249 28.7519 30.6249 29.5587 29.9628C29.7064 29.8416 29.8417 29.7063 29.9629 29.5586C30.625 28.7518 30.625 27.5532 30.625 25.1562Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinejoin="round"
    />
    <path
      d="M26.6146 4.375H23.6979C22.6803 4.375 22.1715 4.375 21.7575 4.50059C20.8253 4.78336 20.0958 5.51284 19.8131 6.445C19.6875 6.85902 19.6875 7.36782 19.6875 8.38542C19.6875 9.40301 19.6875 9.91181 19.8131 10.3258C20.0958 11.258 20.8253 11.9875 21.7575 12.2702C22.1715 12.3958 22.6803 12.3958 23.6979 12.3958H26.6146C27.6322 12.3958 28.141 12.3958 28.555 12.2702C29.4872 11.9875 30.2167 11.258 30.4994 10.3258C30.625 9.91181 30.625 9.40301 30.625 8.38542C30.625 7.36782 30.625 6.85902 30.4994 6.445C30.2167 5.51284 29.4872 4.78336 28.555 4.50059C28.141 4.375 27.6322 4.375 26.6146 4.375Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinejoin="round"
    />
  </svg>
);

const TicketIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      opacity="0.4"
      d="M27.1883 23.4856L23.4866 27.1873C20.4518 30.2221 18.9344 31.7395 17.0616 32.0178C16.3686 32.1207 15.6562 32.1005 14.9562 31.9578C13.7398 31.7099 12.6414 30.9573 11.1581 29.5974C10.9045 29.3649 10.9279 28.9696 11.1573 28.7402C12.4351 27.4624 12.3744 25.33 11.0217 23.9773C9.66907 22.6247 7.5367 22.564 6.25892 23.8416C6.02949 24.0712 5.63414 24.0945 5.40159 23.8409C4.04171 22.3576 3.28907 21.2592 3.04119 20.0428C2.89857 19.3428 2.87828 18.6303 2.98126 17.9374C3.25956 16.0645 4.77693 14.5472 7.81165 11.5125L11.5134 7.81068C11.8879 7.43623 12.2392 7.08488 12.571 6.7561L28.3289 22.3413C27.9758 22.6982 27.5953 23.0786 27.1883 23.4856Z"
      fill="#0E475B"
    />
    <path
      d="M28.7416 11.1569C28.9708 10.9277 29.3657 10.9043 29.5979 11.1577C30.9581 12.6413 31.7109 13.7398 31.9588 14.9563C32.1014 15.6563 32.1217 16.3687 32.0187 17.0617C31.7405 18.9345 30.2231 20.4519 27.1883 23.4867L23.4866 27.1884C20.4518 30.2232 18.9344 31.7406 17.0616 32.0188C16.3686 32.1218 15.6562 32.1015 14.9562 31.9589C13.7398 31.711 12.6414 30.9583 11.1581 29.5984C10.9045 29.366 10.9279 28.9706 11.1573 28.7412C12.4351 27.4634 12.3744 25.331 11.0217 23.9783C9.66907 22.6257 7.5367 22.565 6.25892 23.8428C6.02949 24.0722 5.63414 24.0957 5.40159 23.8419C4.04171 22.3587 3.28907 21.2602 3.04119 20.0439C2.89857 19.3439 2.87828 18.6315 2.98126 17.9385C3.25956 16.0657 4.77693 14.5482 7.81166 11.5135L11.5134 7.81175C14.5482 4.77701 16.0656 3.25965 17.9384 2.98132C18.6314 2.87836 19.3438 2.89865 20.0438 3.04128C21.2603 3.28918 22.3589 4.04195 23.8424 5.40214C24.0958 5.63442 24.0724 6.0293 23.8432 6.25847C22.5654 7.53624 22.6262 9.66861 23.9788 11.0213C25.3314 12.3739 27.4639 12.4346 28.7416 11.1569Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinejoin="round"
    />
    <path
      d="M27.7083 21.8751L13.125 7.29175"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const SolicitacoesIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      opacity="0.4"
      d="M17.5 32.0834C25.5542 32.0834 32.0833 25.5542 32.0833 17.5001C32.0833 9.44593 25.5542 2.91675 17.5 2.91675C9.44585 2.91675 2.91667 9.44593 2.91667 17.5001C2.91667 25.5542 9.44585 32.0834 17.5 32.0834Z"
      fill="#0E475B"
    />
    <path
      d="M17.5 32.0834C9.44584 32.0834 2.91673 25.5542 2.91673 17.5001C2.91673 9.44592 9.4459 2.91675 17.5 2.91675C24.03 2.91675 29.4958 7.20846 31.3542 13.1251H27.7083"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M17.5 11.6667V17.5001L20.4167 20.4167"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M32.0179 18.9583C32.0612 18.4784 32.0833 17.9919 32.0833 17.5M21.875 32.0833C22.3732 31.9194 22.8598 31.7281 23.3333 31.5114M30.3196 24.7917C30.6009 24.2497 30.8518 23.6881 31.0698 23.109M26.5307 29.5009C27.033 29.0851 27.5087 28.6355 27.9545 28.1553"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const ProjetosIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      opacity="0.4"
      d="M14.5833 24.7916V10.2083H2.91667V24.7916C2.91667 26.8334 2.91667 27.8544 3.31403 28.6343C3.66358 29.3203 4.22132 29.878 4.90732 30.2275C5.68721 30.6249 6.70814 30.6249 8.75 30.6249C10.7919 30.6249 11.8128 30.6249 12.5927 30.2275C13.2787 29.878 13.8364 29.3203 14.186 28.6343C14.5833 27.8544 14.5833 26.8334 14.5833 24.7916Z"
      fill="#0E475B"
    />
    <path
      opacity="0.4"
      d="M31.43 22.9419L27.7334 9.08852L27.643 8.75L16.6967 12.0581L20.3933 25.9115C20.9109 27.8511 21.1697 28.8209 21.7433 29.4607C22.2479 30.0233 22.9168 30.4112 23.6545 30.5687C24.4929 30.7476 25.4587 30.4878 27.3903 29.968C29.3218 29.4483 30.2877 29.1884 30.9247 28.6125C31.485 28.1057 31.8713 27.434 32.0281 26.6933C32.2063 25.8513 31.9476 24.8815 31.43 22.9419Z"
      fill="#0E475B"
    />
    <path
      d="M2.91667 10.2083C2.91667 8.16648 2.91667 7.14554 3.31403 6.36565C3.66358 5.67965 4.22132 5.12191 4.90732 4.77237C5.68721 4.375 6.70814 4.375 8.75 4.375C10.7919 4.375 11.8128 4.375 12.5927 4.77237C13.2787 5.12191 13.8364 5.67965 14.186 6.36565C14.5833 7.14554 14.5833 8.16648 14.5833 10.2083V24.7917C14.5833 26.8335 14.5833 27.8545 14.186 28.6344C13.8364 29.3204 13.2787 29.878 12.5927 30.2276C11.8128 30.625 10.7919 30.625 8.75 30.625C6.70814 30.625 5.68721 30.625 4.90732 30.2276C4.22132 29.878 3.66358 29.3204 3.31403 28.6344C2.91667 27.8545 2.91667 26.8335 2.91667 24.7917V10.2083Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M8.75 24.7917H8.7631"
      stroke="#0E475B"
      strokeWidth="2.91667"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M2.91667 10.2083H14.5833"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M16.6959 12.0581C16.1783 10.1185 15.9196 9.14865 16.0978 8.30665C16.2546 7.56601 16.6407 6.89422 17.2012 6.38757C17.8382 5.81157 18.804 5.55171 20.7356 5.03198C22.6672 4.51226 23.633 4.2524 24.4714 4.43136C25.209 4.58879 25.878 4.97665 26.3826 5.53934C26.9561 6.17904 27.215 7.14888 27.7325 9.08852L31.4291 22.9419C31.9467 24.8815 32.2054 25.8513 32.0272 26.6933C31.8704 27.434 31.4843 28.1057 30.9238 28.6125C30.2868 29.1884 29.321 29.4483 27.3894 29.968C25.4578 30.4878 24.492 30.7476 23.6536 30.5687C22.916 30.4112 22.247 30.0233 21.7424 29.4607C21.1689 28.8209 20.91 27.8511 20.3925 25.9115L16.6959 12.0581Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M25.9309 24.3476L25.9436 24.3442"
      stroke="#0E475B"
      strokeWidth="2.91667"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M17.5 11.6669L26.9793 8.75"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const UsuariosIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M22.6042 16.0417C22.6042 13.2227 20.319 10.9375 17.5 10.9375C14.681 10.9375 12.3958 13.2227 12.3958 16.0417C12.3958 18.8606 14.681 21.1458 17.5 21.1458C20.319 21.1458 22.6042 18.8606 22.6042 16.0417Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M22.5789 16.5519C23.0485 16.6943 23.5465 16.7708 24.0625 16.7708C26.8815 16.7708 29.1667 14.4856 29.1667 11.6667C29.1667 8.84771 26.8815 6.5625 24.0625 6.5625C21.4158 6.5625 19.2395 8.57704 18.9836 11.1564"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M16.0164 11.1564C15.7605 8.57704 13.5843 6.5625 10.9375 6.5625C8.11854 6.5625 5.83333 8.84771 5.83333 11.6667C5.83333 14.4856 8.11854 16.7708 10.9375 16.7708C11.4535 16.7708 11.9516 16.6943 12.421 16.5519"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M32.0833 24.0624C32.0833 20.0354 28.4923 16.7708 24.0625 16.7708"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M25.5208 28.4374C25.5208 24.4104 21.9298 21.1458 17.5 21.1458C13.0702 21.1458 9.47917 24.4104 9.47917 28.4374"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M10.9375 16.7708C6.50771 16.7708 2.91667 20.0354 2.91667 24.0624"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <g opacity="0.4">
      <path
        d="M16.0048 11.1601C15.7504 8.57897 13.5734 6.5625 10.9254 6.5625C8.10644 6.5625 5.82123 8.84771 5.82123 11.6667C5.82123 14.4856 8.10644 16.7708 10.9254 16.7708C11.4458 16.7708 11.948 16.8171 12.421 16.9056C12.4046 16.3816 12.3962 16.2126 12.3962 16.0417C12.3962 13.7431 13.9155 11.7994 16.0048 11.1601Z"
        fill="#0E475B"
      />
      <path
        d="M18.2521 21.0908C18.2668 21.1208 18.2814 21.1509 18.2957 21.1812C18.034 21.1577 17.7688 21.1458 17.5003 21.1458C14.8762 21.1458 12.5464 22.2914 11.0831 24.0624H2.90456C2.90456 20.0354 6.49561 16.7708 10.9254 16.7708C11.4534 16.7708 11.9695 16.8171 12.469 16.9056C12.8795 19.3131 14.9759 21.1458 17.5003 21.1458C17.7558 21.1458 18.0068 21.1269 18.2521 21.0908Z"
        fill="#0E475B"
      />
    </g>
    <g opacity="0.4">
      <path
        d="M29.1795 11.6667C29.1795 8.84771 26.8943 6.5625 24.0753 6.5625C21.4273 6.5625 19.2503 8.57897 18.996 11.1601C21.0852 11.7994 22.6045 13.7431 22.6045 16.0417C22.6045 16.2126 22.5961 16.3816 22.5797 16.5481C23.0526 16.693 23.5549 16.7708 24.0753 16.7708C26.8943 16.7708 29.1795 14.4856 29.1795 11.6667Z"
        fill="#0E475B"
      />
      <path
        d="M22.5317 16.9056C23.0312 16.8171 23.5473 16.7708 24.0753 16.7708C28.505 16.7708 32.0962 20.0354 32.0962 24.0624H23.9175C22.4543 22.2914 20.1244 21.1458 17.5003 21.1458C17.232 21.1458 16.9665 21.1577 16.7049 21.1812C16.7194 21.1509 16.7338 21.1208 16.7485 21.0908C16.994 21.1269 17.2449 21.1458 17.5003 21.1458C20.0248 21.1458 22.1212 19.3131 22.5317 16.9056Z"
        fill="#0E475B"
      />
    </g>
  </svg>
);

const TagsIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      opacity="0.4"
      d="M26.3346 12.4489L24.8762 11.5541C23.414 10.6569 22.6829 10.2083 21.875 10.2083C21.0671 10.2083 20.336 10.6569 18.8737 11.5541L17.4154 12.4489C16.0322 13.2977 15.3405 13.7221 14.9619 14.4059C14.5833 15.0897 14.5833 15.9146 14.5833 17.5644V26.1178C14.5833 28.9299 14.5833 30.336 15.4376 31.2096C16.2919 32.0833 17.6668 32.0833 20.4167 32.0833H23.3333C26.0832 32.0833 27.4581 32.0833 28.3124 31.2096C29.1667 30.336 29.1667 28.9299 29.1667 26.1178V17.5644C29.1667 15.9146 29.1667 15.0897 28.7881 14.4059C28.4095 13.7221 27.7178 13.2977 26.3346 12.4489Z"
      fill="#0E475B"
    />
    <path
      d="M26.3346 12.4489L24.8762 11.5541C23.414 10.6569 22.6829 10.2083 21.875 10.2083C21.0671 10.2083 20.336 10.6569 18.8737 11.5541L17.4154 12.4489C16.0322 13.2977 15.3405 13.7221 14.9619 14.4059C14.5833 15.0897 14.5833 15.9146 14.5833 17.5644V26.1178C14.5833 28.9299 14.5833 30.336 15.4376 31.2096C16.2919 32.0833 17.6668 32.0833 20.4167 32.0833H23.3333C26.0832 32.0833 27.4581 32.0833 28.3124 31.2096C29.1667 30.336 29.1667 28.9299 29.1667 26.1178V17.5644C29.1667 15.9146 29.1667 15.0897 28.7881 14.4059C28.4095 13.7221 27.7178 13.2977 26.3346 12.4489Z"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M20.4167 10.366C19.4851 9.47202 18.9279 9.00207 18.2254 8.82551C17.4087 8.62024 16.5508 8.85045 14.8349 9.31087L13.1237 9.77006C11.5004 10.2056 10.6888 10.4234 10.125 10.9613C9.56118 11.4991 9.34269 12.264 8.90573 13.7937L6.64018 21.7249C5.89531 24.3326 5.52288 25.6363 6.15508 26.6636C6.69865 27.5467 8.87177 28.6328 10.9375 29.1667"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M21.1381 14.5834C22.365 13.7676 23.4541 12.4585 24.1307 10.8304C25.5278 7.46911 24.6377 4.02106 22.1427 3.12899C19.6477 2.23692 16.4924 4.23864 15.0955 7.59997C14.8619 8.16189 14.6923 8.72625 14.5833 9.28067"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
    />
  </svg>
);

const ConfiguracoesIcon = () => (
  <svg
    width="35"
    height="35"
    viewBox="0 0 35 35"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle
      cx="17.5"
      cy="17.5"
      r="4.375"
      stroke="#0E475B"
      strokeWidth="2.1875"
    />
    <path
      d="M28.2917 21.875C28.0194 22.4921 28.15 23.2128 28.5917 23.625L28.6817 23.715C29.0573 24.0906 29.2683 24.5966 29.2683 25.125C29.2683 25.6534 29.0573 26.1594 28.6817 26.535C28.3061 26.9106 27.8001 27.1216 27.2717 27.1216C26.7433 27.1216 26.2373 26.9106 25.8617 26.535L25.7717 26.445C25.3595 26.0033 24.6388 25.8727 24.0217 26.145C23.4046 26.4173 22.9951 27.0312 22.9917 27.715V27.825C22.9917 28.9296 22.0963 29.825 20.9917 29.825C19.8871 29.825 18.9917 28.9296 18.9917 27.825V27.735C18.9883 27.0312 18.5788 26.4173 17.9617 26.145C17.3446 25.8727 16.6239 26.0033 16.2117 26.445L16.1217 26.535C15.7461 26.9106 15.2401 27.1216 14.7117 27.1216C14.1833 27.1216 13.6773 26.9106 13.3017 26.535C12.9261 26.1594 12.7151 25.6534 12.7151 25.125C12.7151 24.5966 12.9261 24.0906 13.3017 23.715L13.3917 23.625C13.8334 23.2128 13.964 22.4921 13.6917 21.875C13.4194 21.2579 12.8055 20.8484 12.1217 20.845H12.0117C10.9071 20.845 10.0117 19.9496 10.0117 18.845C10.0117 17.7404 10.9071 16.845 12.0117 16.845H12.1017C12.8055 16.8416 13.4194 16.4321 13.6917 15.815C13.964 15.1979 13.8334 14.4772 13.3917 14.065L13.3017 13.975C12.9261 13.5994 12.7151 13.0934 12.7151 12.565C12.7151 12.0366 12.9261 11.5306 13.3017 11.155C13.6773 10.7794 14.1833 10.5684 14.7117 10.5684C15.2401 10.5684 15.7461 10.7794 16.1217 11.155L16.2117 11.245C16.6239 11.6867 17.3446 11.8173 17.9617 11.545C18.5788 11.2727 18.9883 10.6588 18.9917 9.975V9.865C18.9917 8.76043 19.8871 7.865 20.9917 7.865C22.0963 7.865 22.9917 8.76043 22.9917 9.865V9.955C22.9951 10.6388 23.4046 11.2527 24.0217 11.525C24.6388 11.7973 25.3595 11.6667 25.7717 11.225L25.8617 11.135C26.2373 10.7594 26.7433 10.5484 27.2717 10.5484C27.8001 10.5484 28.3061 10.7594 28.6817 11.135C29.0573 11.5106 29.2683 12.0166 29.2683 12.545C29.2683 13.0734 29.0573 13.5794 28.6817 13.955L28.5917 14.045C28.15 14.4572 28.0194 15.1779 28.2917 15.795C28.564 16.4121 29.1779 16.8216 29.8617 16.825H29.9717C31.0763 16.825 31.9717 17.7204 31.9717 18.825C31.9717 19.9296 31.0763 20.825 29.9717 20.825H29.8817C29.1779 20.8284 28.564 21.2379 28.2917 21.855"
      stroke="#0E475B"
      strokeWidth="2.1875"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

const menuItems = [
  { id: "dashboard", icon: DashboardIcon, label: "Dashboard", href: "#" },
  { id: "tickets", icon: TicketIcon, label: "Tickets", href: "#" },
  {
    id: "solicitacoes",
    icon: SolicitacoesIcon,
    label: "Solicitações",
    href: "#",
  },
  { id: "projetos", icon: ProjetosIcon, label: "Projetos", href: "#" },
  { id: "usuarios", icon: UsuariosIcon, label: "Usuários", href: "#" },
  { id: "tags", icon: TagsIcon, label: "Tags", href: "#" },
  {
    id: "configuracoes",
    icon: ConfiguracoesIcon,
    label: "Configurações",
    href: "#",
  },
];

export function Sidebar({ defaultExpanded = true }: SidebarProps) {
  const [isExpanded, setIsExpanded] = useState(defaultExpanded);
  const [activeMenu, setActiveMenu] = useState("tickets");

  const handleMenuClick = (menuId: string) => {
    setActiveMenu(menuId);
  };

  const getActiveIndex = () => {
    return menuItems.findIndex((item) => item.id === activeMenu);
  };

  const activeIndex = getActiveIndex();
  const isFirstActive = activeIndex === 0;
  const isLastActive = activeIndex === menuItems.length - 1;

  return (
    <aside
      className={cn(
        "relative h-screen transition-all duration-500 ease-in-out flex-shrink-0 shadow-none flex flex-col ",
        isExpanded ? "w-[276px]" : "w-[90px]"
      )}
    >
      <div
        className={cn(
          "overflow-hidden "
          // isFirstActive && "rounded-br-[12px]"
        )}
      >
        <button
          onClick={() => setIsExpanded(!isExpanded)}
          className="absolute -right-3 top-8 z-20 flex h-6 w-6 items-center justify-center rounded-full bg-[#2C6B7A] text-white shadow-lg hover:bg-[#234f5c] transition-colors"
          aria-label={isExpanded ? "Retrair sidebar" : "Expandir sidebar"}
        >
          <svg
            width="12"
            height="12"
            viewBox="0 0 12 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            {isExpanded ? (
              <path
                d="M8 2L4 6L8 10"
                stroke="currentColor"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            ) : (
              <path
                d="M4 2L8 6L4 10"
                stroke="currentColor"
                strokeWidth="1.5"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            )}
          </svg>
        </button>

        <div
          className={cn(
            "flex items-center justify-center transition-all duration-500 ease-in-out overflow-hidden ",
            isExpanded ? "h-28" : "h-28"
          )}
        >
          <div
            className={cn(
              "py-2.5 inline-flex justify-center items-center gap-2.5 overflow-hidden transition-all duration-500",
              isExpanded ? "w-[256px] h-[112px]" : "w-[90px] h-[112px]"
            )}
          >
            {/* Logo expandido */}
            <img
              className={cn(
                "transition-all duration-500 ease-in-out",
                isExpanded ? "w-64 h-28 opacity-100" : "w-0 h-0 opacity-0"
              )}
              src="/br_ticket_expanded.svg"
              alt="Logo BR Ticket"
            />

            {/* Logo retraído */}
            <img
              className={cn(
                "transition-all duration-500 ease-in-out",
                isExpanded
                  ? "w-0 h-0 opacity-0"
                  : "w-[70px] h-[70px] opacity-100"
              )}
              src="/br_ticket.svg"
              alt="Logo"
            />
          </div>
        </div>
      </div>
      <div className="flex-1 flex flex-col overflow-hidden relative">
        <div
          className={cn(
            "absolute inset-0 pointer-events-none transition-all duration-500",
            isExpanded
              ? "bg-[linear-gradient(90deg,_#FFFFFF_80.77%,_#E7F0F3_87.5%)]"
              : "bg-[linear-gradient(90deg,_#FFFFFF_70%,_#E7F0F3_85%)]"
          )}
        />

        <nav className="flex-1 relative z-10">
          {menuItems.map((item, index) => {
            const Icon = item.icon;
            const isActive = activeMenu === item.id;
            const isBeforeActive = index === activeIndex - 1;
            const isAfterActive = index === activeIndex + 1;
            const isFirst = index === 0;
            const isLast = index === menuItems.length - 1;

            let borderRadiusClasses = "";

            if (isActive) {
              borderRadiusClasses = "rounded-tl-[12px] rounded-bl-[12px]";

              // First item gets bottom-right radius
              if (isFirst) {
                borderRadiusClasses += " rounded-br-[12px] rounded-tl-[0px]";
              }
              // Last item gets top-right and bottom-right radius
              else if (isLast) {
                borderRadiusClasses += " rounded-tr-[12px] rounded-br-[12px]";
              }
            } else if (isBeforeActive) {
              // Item before active gets bottom-right radius
              borderRadiusClasses = "rounded-br-[12px]";
            } else if (isAfterActive) {
              // Item after active gets top-right radius
              borderRadiusClasses = "rounded-tr-[12px]";
            }

            return (
              <div
                key={item.id}
                className={cn(
                  "flex items-center h-16 transition-all duration-500 relative",
                  isActive
                    ? "bg-[#E7F0F3] text-[#0D475A]"
                    : "bg-white text-[#2C6B7A] hover:bg-gray-50",
                  borderRadiusClasses,
                  isExpanded ? "w-full" : "w-[90px]"
                )}
              >
                <Button
                  onClick={() => handleMenuClick(item.id)}
                  className={cn(
                    "flex items-center h-16 transition-all duration-500 border-0 relative bg-transparent hover:bg-transparent shadow-none",
                    isExpanded
                      ? "gap-4 py-3 pl-4 w-full justify-start"
                      : "justify-center w-[90px] px-0",
                    isActive ? "text-[#0D475A]" : "text-[#2C6B7A]"
                  )}
                >
                  <div className="flex-shrink-0">
                    <Icon />
                  </div>
                  {isExpanded && (
                    <span className="text-[15px] font-medium leading-none">
                      {item.label}
                    </span>
                  )}
                </Button>
              </div>
            );
          })}
        </nav>

        <div
          className={cn(
            "flex-1 bg-white relative z-10 min-h-0",
            isLastActive && "rounded-tr-[12px]"
          )}
        />
      </div>
    </aside>
  );
}
